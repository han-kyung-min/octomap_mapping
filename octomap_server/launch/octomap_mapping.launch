<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
    <!--arg name="use_sim_time"                value="false"/--> <!--by kmHan-->
    <!--param name="use_sim_time" value="true"/--> <!--by kmHan-->

    <!--node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 10">
    </node-->
    
    <arg name="namespace" default=""/>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">

            <param name="incremental_2D_projection" value="true" />
            
            <param name="max_depth" value="16" />
			
            <param name="resolution" value="0.05" />
            
            <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
            <param name="frame_id" type="string" value="map" />
            
            <!-- maximum range to integrate (speedup!) -->
            <param name="sensor_model/max_range" value="7.0" />
            
            <!-- data source to integrate (PointCloud2) -->
            <!--remap from="cloud_in" to="/narrow_stereo/points_filtered2" /-->
            <remap from="cloud_in" to="scan_ptcloud" />
            <!--remap from="/$(arg namespace)/cloud_in" to="/$(arg namespace)/scan" /-->
<!--        <remap from="tf"        to="/$(arg namespace)/tf" />
        <remap from="tf_static" to="/$(arg namespace)/tf_static" />-->
        </node>
        
        <!-- Publishes the voxel grid to rviz for display -->
        <!--node pkg="costmap_2d" type="costmap_2d_markers" name="voxel_visualizer">
            <remap from="voxel_grid" to="costmap/voxel_grid"/>
        </node-->

        <!-- Run the costmap node -->
        <!--node name="costmap_node" pkg="costmap_2d" type="costmap_2d_node"-->
            <!--remap from="/base_link" to="/base_link_gt"/-->
            <!--remap from="/map" to="/world"/-->
            <!--rosparam file="$(find costmap_2d)/launch/example_params.yaml" command="load" ns="costmap" />
        </node-->
</launch>
