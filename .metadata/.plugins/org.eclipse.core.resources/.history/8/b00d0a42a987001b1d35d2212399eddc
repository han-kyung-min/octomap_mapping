/*
 * FrontierDetector.cpp
 *
 *  Created on: Mar 18, 2021
 *      Author: hankm
 */


#include "FrontierDetector.hpp"

namespace frontier_detector
{

FrontierDetector::FrontierDetector(const ros::NodeHandle private_nh_, const ros::NodeHandle &nh_):

m_nh_private(private_nh_),
m_nh(nh_)
{
	m_mapframedataSub = m_nh.subscribe("mapframe_data", 1, mapCallback); // kmHan
}

FrontierDetector::~FrontierDetector()
{

}

FrontierDetector::mapCallback(const octomap_server::mapframedata& msg )
{
	cv_bridge::CvImagePtr cv_ptr;
	cv_bridge::tomsg.image_map_2d ;
}


}

