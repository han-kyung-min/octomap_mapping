/*
 * FrontierDetector.cpp
 *
 *  Created on: Mar 18, 2021
 *      Author: hankm
 */


#include <FrontierDetector.hpp>

namespace frontier_detector
{

FrontierDetector::FrontierDetector(const ros::NodeHandle private_nh_, const ros::NodeHandle &nh_):

m_nh_private(private_nh_),
m_nh(nh_)
{
	m_mapframedataSub = m_nh.subscribe("mapframe_data", 1, mapCallback); // kmHan
}

FrontierDetector::~FrontierDetector()
{

}

int FrontierDetector::mapCallback(const octomap_server::mapframedata& msg )
{
	cv_bridge::CvImagePtr cv_ptr;
	cv_ptr = cv_bridge::toCvCopy( msg.image_map_2d, sensor_msgs::image_encodings::MONO8 );

	cv::Mat img = cv_ptr->image.clone() ;

	cv::namedWindow("frontier_detector", 1);
	cv::imshow("frontier_detector", img);
	cv::waitKey(10);

	return 1;
}


}

